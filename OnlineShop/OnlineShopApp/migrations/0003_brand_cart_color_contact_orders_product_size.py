# Generated by Django 2.2.12 on 2022-06-09 18:15

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('OnlineShopApp', '0002_teacher'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(help_text='Add watch brand', max_length=30, unique=True, verbose_name='Watch Brand')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(help_text='Add watch color', max_length=30, unique=True, verbose_name='Watch Color')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=100)),
                ('msg', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(help_text='Add watch size', max_length=30, unique=True, verbose_name='Watch Size')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prodobj', models.CharField(max_length=40)),
                ('qnt', models.IntegerField(default=1)),
                ('price', models.FloatField()),
                ('img', models.ImageField(upload_to='')),
                ('total', models.FloatField(default=0)),
                ('status', models.CharField(max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prodobj', models.CharField(max_length=40)),
                ('qnt', models.IntegerField(default=1)),
                ('price', models.FloatField()),
                ('img', models.ImageField(upload_to='')),
                ('total', models.FloatField(default=0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Cart',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_group_name', models.CharField(help_text='Note: The group name and product color should be unique', max_length=30, verbose_name='Product group name')),
                ('display_product', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], default='no', help_text='If this is selected as yes the product will be visible on the product page, please select yes if you want this product to be display on product page', max_length=100, verbose_name='Display this product on product page?')),
                ('product_name', models.CharField(max_length=30, unique=True)),
                ('regular_price', models.PositiveIntegerField()),
                ('sale_price', models.PositiveIntegerField(blank=True, null=True)),
                ('sale_last_date', models.DateField(blank=True, help_text='After the sale last date product will show the regular price', null=True)),
                ('product_image', models.ImageField(help_text="This is display image, it'll be visible on the product page", upload_to='images', verbose_name='Display Image')),
                ('product_img1', models.ImageField(help_text="Product's side image", upload_to='images', verbose_name='Side Image')),
                ('product_img2', models.ImageField(help_text="Product's side image", upload_to='images', verbose_name='Side Image')),
                ('product_img3', models.ImageField(help_text="Product's side image", upload_to='images', verbose_name='Side Image')),
                ('date', models.DateField(default=datetime.datetime(2022, 6, 9, 18, 15, 4, 57396, tzinfo=utc))),
                ('product_desc', models.TextField(max_length=200, verbose_name='Product Description')),
                ('product_belongs', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('band', 'Band')], max_length=100)),
                ('featured_product', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], default='No', help_text='Select yes if you want this product to be displayed on featured product section', max_length=100, verbose_name='Featured product?')),
                ('display_on_women_section', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], default='No', help_text="Select yes if you want this product to be displayed on women's menu section", max_length=100, verbose_name="Display on women's watches menu?")),
                ('display_on_men_section', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], default='No', help_text="Select yes if you want this product to be displayed on men's menu section", max_length=100, verbose_name="Display on men's watches menu?")),
                ('display_on_offer_section', models.CharField(choices=[('no', 'No'), ('yes', 'Yes')], default='No', help_text='If this product is on sale, select yes if you want this porduct to be display on the sale section', max_length=100, verbose_name='Display on sale selction?')),
                ('brand', models.ForeignKey(help_text='If the brand not available in the list, use the above brand form to add brand', on_delete=django.db.models.deletion.PROTECT, to='OnlineShopApp.Brand', verbose_name='Watch Brand')),
                ('color', models.ForeignKey(help_text='If the color not available in the list, use the above color form to add color', on_delete=django.db.models.deletion.PROTECT, to='OnlineShopApp.Color', verbose_name='Watch Color')),
                ('size', models.ForeignKey(help_text='If the size not available in the list, use the above size form to add size', on_delete=django.db.models.deletion.PROTECT, to='OnlineShopApp.Size', verbose_name='Watch Size')),
            ],
            options={
                'unique_together': {('product_group_name', 'color')},
            },
        ),
    ]
